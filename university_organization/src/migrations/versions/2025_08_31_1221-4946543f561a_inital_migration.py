"""Inital migration

Revision ID: 4946543f561a
Revises: 
Create Date: 2025-08-31 12:21:49.869039

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4946543f561a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments'))
    )
    op.create_table('facultys',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_facultys'))
    )
    op.create_table('roles',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    op.create_table('chairs',
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['facultys.id'], name=op.f('fk_chairs_faculty_id_facultys')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chairs'))
    )
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_users_role_id_roles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('groups',
    sa.Column('chair_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chair_id'], ['chairs.id'], name=op.f('fk_groups_chair_id_chairs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_groups'))
    )
    op.create_table('teachers',
    sa.Column('chair_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chair_id'], ['chairs.id'], name=op.f('fk_teachers_chair_id_chairs')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_teachers_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_teachers'))
    )
    op.create_table('workers',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_workers_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workers'))
    )
    op.create_table('students',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('third_name', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('student_id_number', sa.String(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('passport_pin', sa.String(), nullable=True),
    sa.Column('passport_number', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('university', sa.String(), nullable=False),
    sa.Column('specialty', sa.String(), nullable=False),
    sa.Column('student_status', sa.String(), nullable=False),
    sa.Column('education_form', sa.String(), nullable=False),
    sa.Column('education_type', sa.String(), nullable=False),
    sa.Column('payment_form', sa.String(), nullable=False),
    sa.Column('education_lang', sa.String(), nullable=False),
    sa.Column('faculty', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('semester', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('avg_gpa', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_students_group_id_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_students_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_students'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('students')
    op.drop_table('workers')
    op.drop_table('teachers')
    op.drop_table('groups')
    op.drop_table('users')
    op.drop_table('chairs')
    op.drop_table('roles')
    op.drop_table('facultys')
    op.drop_table('departments')
    # ### end Alembic commands ###
